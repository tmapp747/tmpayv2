openapi: 3.0.1
info:
  title: CasinoBridge
  version: v1
paths:
  /account/get-balances:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetClientBalancesRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/GetClientBalancesRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GetClientBalancesRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetClientBalancesResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientBalancesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetClientBalancesResponse'
  /payments/cryptapi-user-addresses:
    get:
      tags:
        - CryptApi
      parameters:
        - name: apiKey
          in: header
          schema:
            type: string
            format: uuid
        - name: username
          in: query
          schema:
            type: string
        - name: clientId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetClientAddressesResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientAddressesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetClientAddressesResponse'
  /payments/generate-cryptapi-address:
    post:
      tags:
        - CryptApi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateAddressRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/GenerateAddressRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GenerateAddressRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenerateAddressResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateAddressResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GenerateAddressResponse'
  /crypto-manager/user-addresses:
    get:
      tags:
        - CryptoManager
      parameters:
        - name: apiKey
          in: header
          schema:
            type: string
            format: uuid
        - name: username
          in: query
          schema:
            type: string
        - name: clientId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetClientAddressesResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientAddressesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetClientAddressesResponse'
  /crypto-manager/generate-address:
    post:
      tags:
        - CryptoManager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateAddressRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/GenerateAddressRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GenerateAddressRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenerateAddressResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateAddressResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GenerateAddressResponse'
  /Default/Transfer:
    post:
      tags:
        - Default
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositChips'
          text/json:
            schema:
              $ref: '#/components/schemas/DepositChips'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DepositChips'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
  /Default/GetHierarchy:
    post:
      tags:
        - Default
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetHierarchyReq'
          text/json:
            schema:
              $ref: '#/components/schemas/GetHierarchyReq'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GetHierarchyReq'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
    get:
      tags:
        - Default
      parameters:
        - name: username
          in: query
          schema:
            type: string
        - name: isAgent
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/HierarchyResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/HierarchyResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/HierarchyResponse'
  /Default/GetTurnover:
    get:
      tags:
        - Default
      parameters:
        - name: StartTimeLocal
          in: query
          schema:
            type: string
            format: date-time
        - name: EndTimeLocal
          in: query
          schema:
            type: string
            format: date-time
        - name: ClientId
          in: query
          schema:
            type: string
        - name: IsTest
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BoRespBase'
            application/json:
              schema:
                $ref: '#/components/schemas/BoRespBase'
            text/json:
              schema:
                $ref: '#/components/schemas/BoRespBase'
  /Default/BackupAgents:
    post:
      tags:
        - Default
      parameters:
        - name: perPage
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
  /Default/BackupAgentsOnePerLine:
    post:
      tags:
        - Default
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
  /Default/GetClientEntries:
    post:
      tags:
        - Default
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetClientEntriesRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/GetClientEntriesRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GetClientEntriesRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetClientEntriesNewResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientEntriesNewResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetClientEntriesNewResponse'
  /Default/GetEmailUser:
    get:
      tags:
        - Default
      parameters:
        - name: authCode
          in: query
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EmailUserResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/EmailUserResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmailUserResponse'
  /jobs/client-turnover-saver/status:
    post:
      tags:
        - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobStatusRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/JobStatusRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JobStatusRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JobStatusResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatusResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobStatusResponse'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /jobs/client-turnover-saver/start:
    post:
      tags:
        - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartDailyJobRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/StartDailyJobRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StartDailyJobRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JobErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/JobErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobErrorResponse'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /jobs/client-turnover-saver/stop:
    post:
      tags:
        - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopJobRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/StopJobRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StopJobRequest'
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /Default/SendMessage:
    post:
      tags:
        - Message
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
  /Default/ResendClientEmail:
    post:
      tags:
        - Message
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendClientEmailRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ResendClientEmailRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ResendClientEmailRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
  /payments/get-cryptodepositor-enabled:
    get:
      tags:
        - Payment
      parameters:
        - name: username
          in: query
          schema:
            type: string
        - name: clientId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetCryptoDepositorEnabledResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetCryptoDepositorEnabledResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetCryptoDepositorEnabledResponse'
  /payments/set-cryptodepositor-enabled:
    post:
      tags:
        - Payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetBoolValueRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SetBoolValueRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SetBoolValueRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
  /payments/get-fiatps-enabled:
    get:
      tags:
        - Payment
      parameters:
        - name: username
          in: query
          schema:
            type: string
        - name: clientId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetFiatpsEnabledResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetFiatpsEnabledResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetFiatpsEnabledResponse'
  /payments/set-fiatps-enabled:
    post:
      tags:
        - Payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetBoolValueRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SetBoolValueRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SetBoolValueRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
  /payments/withdraw:
    post:
      tags:
        - Payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WithdrawRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WithdrawRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
  /payments/validation/providers:
    post:
      tags:
        - PaymentValidation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAvailableProvidersRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/GetAvailableProvidersRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GetAvailableProvidersRequest'
      responses:
        '200':
          description: Success
  /payments/validation/transaction:
    post:
      tags:
        - PaymentValidation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionValidationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/TransactionValidationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TransactionValidationRequest'
      responses:
        '200':
          description: Success
  /statistics/client-transactions-by-client-id:
    post:
      tags:
        - Statistics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetClientTransactionStatisticsByIdRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/GetClientTransactionStatisticsByIdRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GetClientTransactionStatisticsByIdRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetClientTransactionStatisticsResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientTransactionStatisticsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetClientTransactionStatisticsResponse'
  /statistics/transactions-by-client-username:
    post:
      tags:
        - Statistics
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GetClientTransactionStatisticsByUsernameRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/GetClientTransactionStatisticsByUsernameRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/GetClientTransactionStatisticsByUsernameRequest
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetClientTransactionStatisticsResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientTransactionStatisticsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetClientTransactionStatisticsResponse'
  /update/email:
    post:
      tags:
        - Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateEmailRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EmailUserResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/EmailUserResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmailUserResponse'
  /update/player:
    post:
      tags:
        - Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlayerDataRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdatePlayerDataRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdatePlayerDataRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
  /verification/verify-client-step:
    post:
      tags:
        - Verification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyClientStepRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/VerifyClientStepRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VerifyClientStepRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
components:
  schemas:
    BaseResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ResponseStatus'
        message:
          type: string
          nullable: true
      additionalProperties: false
    BoRespBase:
      type: object
      properties:
        alertMessage:
          type: string
          nullable: true
        alertType:
          type: string
          nullable: true
        hasError:
          type: boolean
      additionalProperties: false
    ClientBalance:
      type: object
      properties:
        balanceTypeId:
          type: string
          nullable: true
        currencyId:
          type: string
          nullable: true
        balance:
          type: number
          format: double
      additionalProperties: false
    ClientEntries:
      type: object
      properties:
        clientId:
          type: integer
          format: int32
        login:
          type: string
          nullable: true
        entriesPerBets:
          type: integer
          format: int32
        entriesPerAmount:
          type: integer
          format: int32
        entriesPerYesterday:
          type: integer
          format: int32
        entriesTotalCount:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    ClientTransactionStatisticsDto:
      type: object
      properties:
        totalDeposit:
          type: number
          format: double
        totalBet:
          type: number
          format: double
        totalWithdraw:
          type: number
          format: double
        canWithdraw:
          type: boolean
        amountToBet:
          type: number
          format: double
        wageringFactor:
          type: number
          format: double
          readOnly: true
      additionalProperties: false
    DepositChips:
      type: object
      properties:
        authToken:
          type: string
          format: uuid
        platform:
          type: integer
          format: int32
        amount:
          type: number
          format: double
        toAgent:
          type: boolean
        currency:
          type: string
          nullable: true
        nonce:
          type: string
          nullable: true
        clientId:
          type: integer
          format: int64
        username:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
      additionalProperties: false
    EmailUserResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ResponseStatus'
        message:
          type: string
          nullable: true
        clientId:
          type: integer
          format: int64
          nullable: true
        oldEmail:
          type: string
          nullable: true
        newEmail:
          type: string
          nullable: true
        authCode:
          type: string
          format: uuid
          nullable: true
        isVerified:
          type: boolean
          nullable: true
        attempts:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    GenerateAddressRequest:
      type: object
      properties:
        authToken:
          type: string
          format: uuid
        platform:
          type: integer
          format: int32
        clientId:
          type: integer
          format: int64
        ticker:
          type: string
          nullable: true
        toAddress:
          type: string
          nullable: true
      additionalProperties: false
    GenerateAddressResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ResponseStatus'
        message:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
      additionalProperties: false
    GetAvailableProvidersRequest:
      type: object
      properties:
        transactionData:
          $ref: '#/components/schemas/InitializeTransactionRequest'
        providers:
          type: array
          items:
            $ref: '#/components/schemas/ProviderDto'
          nullable: true
      additionalProperties: false
    GetClientAddressesResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ResponseStatus'
        message:
          type: string
          nullable: true
        addresses:
          type: object
          additionalProperties:
            type: string
          nullable: true
      additionalProperties: false
    GetClientBalancesRequest:
      type: object
      properties:
        authToken:
          type: string
          format: uuid
        platform:
          type: integer
          format: int32
        clientId:
          type: integer
          format: int64
        username:
          type: string
          nullable: true
        balanceTypeId:
          type: string
          nullable: true
      additionalProperties: false
    GetClientBalancesResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ResponseStatus'
        message:
          type: string
          nullable: true
        balances:
          type: array
          items:
            $ref: '#/components/schemas/ClientBalance'
          nullable: true
      additionalProperties: false
    GetClientEntriesNewResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ResponseStatus'
        message:
          type: string
          nullable: true
        clientTotalCount:
          type: integer
          format: int32
        clientEntries:
          type: array
          items:
            $ref: '#/components/schemas/ClientEntries'
          nullable: true
      additionalProperties: false
    GetClientEntriesRequest:
      type: object
      properties:
        authToken:
          type: string
          format: uuid
        platform:
          type: integer
          format: int32
        dateUtc:
          type: string
          format: date-time
        limit:
          type: integer
          format: int32
        sinceClientId:
          type: integer
          format: int32
      additionalProperties: false
    GetClientTransactionStatisticsByIdRequest:
      type: object
      properties:
        authToken:
          type: string
          format: uuid
        currency:
          type: string
          nullable: true
        clientId:
          type: integer
          format: int64
      additionalProperties: false
    GetClientTransactionStatisticsByUsernameRequest:
      type: object
      properties:
        authToken:
          type: string
          format: uuid
        currency:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
      additionalProperties: false
    GetClientTransactionStatisticsResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ResponseStatus'
        message:
          type: string
          nullable: true
        statisticsForThePast7Days:
          $ref: '#/components/schemas/ClientTransactionStatisticsDto'
        statisticsForMostRecentDeposit:
          $ref: '#/components/schemas/ClientTransactionStatisticsDto'
        currentBalance:
          type: number
          format: double
      additionalProperties: false
    GetCryptoDepositorEnabledResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ResponseStatus'
        message:
          type: string
          nullable: true
        cryptoDepositorEnabled:
          type: boolean
          nullable: true
      additionalProperties: false
    GetFiatpsEnabledResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ResponseStatus'
        message:
          type: string
          nullable: true
        fiatpsEnabled:
          type: boolean
          nullable: true
      additionalProperties: false
    GetHierarchyReq:
      type: object
      properties:
        authToken:
          type: string
          format: uuid
        platform:
          type: integer
          format: int32
        isAgent:
          type: boolean
        username:
          type: string
          nullable: true
        userId:
          type: integer
          format: int32
      additionalProperties: false
    HierarchyResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ResponseStatus'
        message:
          type: string
          nullable: true
        hierarchy:
          type: array
          items:
            $ref: '#/components/schemas/HierarchyUser'
          nullable: true
        user:
          $ref: '#/components/schemas/HierarchyUser'
      additionalProperties: false
    HierarchyUser:
      type: object
      properties:
        id:
          type: integer
          format: int32
        clientId:
          type: integer
          format: int64
          nullable: true
        username:
          type: string
          nullable: true
        parentClientId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    InitializeTransactionRequest:
      type: object
      properties:
        merchantData:
          $ref: '#/components/schemas/MerchantData'
        paymentData:
          $ref: '#/components/schemas/PaymentData'
        cashIn:
          type: boolean
      additionalProperties: false
    JobErrorResponse:
      type: object
      properties:
        errorMessage:
          type: string
          nullable: true
      additionalProperties: false
    JobStatusRequest:
      type: object
      properties:
        jobAuth:
          type: string
          format: uuid
      additionalProperties: false
    JobStatusResponse:
      type: object
      properties:
        isRunning:
          type: boolean
      additionalProperties: false
    MerchantData:
      type: object
      properties:
        merchantHash:
          type: string
          nullable: true
        clientId:
          type: string
          nullable: true
        additionalData:
          nullable: true
      additionalProperties: false
    PaymentData:
      type: object
      properties:
        nonce:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        currency:
          type: string
          nullable: true
        providerId:
          type: integer
          format: int32
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}
    ProviderDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    ResendClientEmailRequest:
      type: object
      properties:
        authToken:
          type: string
          format: uuid
        platform:
          type: integer
          format: int32
        clientId:
          type: integer
          format: int64
        username:
          type: string
          nullable: true
        emailTemplateId:
          type: integer
          format: int32
      additionalProperties: false
    ResponseStatus:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: int32
    SendMessageRequest:
      required:
        - message
        - subject
      type: object
      properties:
        authToken:
          type: string
          format: uuid
        platform:
          type: integer
          format: int32
        username:
          type: string
          nullable: true
        clientId:
          type: integer
          format: int64
        subject:
          type: string
        message:
          type: string
      additionalProperties: false
    SetBoolValueRequest:
      type: object
      properties:
        authToken:
          type: string
          format: uuid
        platform:
          type: integer
          format: int32
        username:
          type: string
          nullable: true
        value:
          type: boolean
      additionalProperties: false
    StartDailyJobRequest:
      type: object
      properties:
        jobAuth:
          type: string
          format: uuid
        startToday:
          type: boolean
      additionalProperties: false
    StopJobRequest:
      type: object
      properties:
        jobAuth:
          type: string
          format: uuid
      additionalProperties: false
    TransactionValidationRequest:
      type: object
      properties:
        merchantData:
          $ref: '#/components/schemas/MerchantData'
        paymentData:
          $ref: '#/components/schemas/PaymentData'
        providerData:
          nullable: true
        validationId:
          type: integer
          format: int64
      additionalProperties: false
    UpdateEmailRequest:
      type: object
      properties:
        authToken:
          type: string
          format: uuid
        platform:
          type: integer
          format: int32
        clientId:
          type: integer
          format: int32
        newEmail:
          type: string
          nullable: true
        isVerified:
          type: boolean
      additionalProperties: false
    UpdatePlayerDataRequest:
      type: object
      properties:
        authToken:
          type: string
          format: uuid
        platform:
          type: integer
          format: int32
        clientId:
          type: integer
          format: int64
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        regionId:
          type: integer
          format: int32
          nullable: true
        gender:
          type: integer
          format: int32
          nullable: true
        docNumber:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        isLocked:
          type: boolean
          nullable: true
        isSubscribedToNewsletter:
          type: boolean
          nullable: true
        preMatchSelectionLimit:
          type: number
          format: double
          nullable: true
        liveSelectionLimit:
          type: number
          format: double
          nullable: true
        sportsbookProfileId:
          type: integer
          format: int32
          nullable: true
        bTag:
          type: string
          nullable: true
        notificationOptions:
          type: integer
          format: int32
          nullable: true
        isCasinoBlocked:
          type: boolean
          nullable: true
        partnerClientCategoryId:
          type: integer
          format: int32
          nullable: true
        isEmailVerified:
          type: boolean
          nullable: true
        isPhoneVerified:
          type: boolean
          nullable: true
      additionalProperties: false
    VerificationStep:
      enum:
        - 1
        - 2
        - 3
      type: integer
      format: int32
    VerifyClientStepRequest:
      type: object
      properties:
        authToken:
          type: string
          format: uuid
        platform:
          type: integer
          format: int32
        clientId:
          type: integer
          format: int32
        step:
          $ref: '#/components/schemas/VerificationStep'
      additionalProperties: false
    WithdrawRequest:
      type: object
      properties:
        authToken:
          type: string
          format: uuid
        platform:
          type: integer
          format: int32
        amount:
          type: number
          format: double
        currency:
          type: integer
          format: int32
        destinationCurrency:
          type: integer
          format: int32
        destinationNetwork:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        uniqueId:
          type: integer
          format: int64
        clientId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
